class School{
  constructor(name,level,numberOfStudents)
  {
    this._name=name;
    this._level=level;
    this._numberOfStudents=numberOfStudents;
  }
  get name()
  {
    return this._name;
  }
  get level()
  {
    return this._level;
  }
  get numberOfStudents()
  {
    return this._numberOfStudents;
  }

  quickFacts()
  {
    console.log(`${this.name} educates ${this.numberOfStudents} students at the ${this.level} school level.`);
  }
  static pickSubstituteTeacher(substituteTeachers)
  {
    const rand =Math.floor(Math.random()*substituteTeachers.length);
    return substituteTeachers[rand];
  }

  set numberOfStudents(numberOfStudents)
  {
    if(numberOfStudents.isNaN())
    {
      console.log('Invalid input: numberOfStudents must be set to a Number.');
    }
    else
    {
      this._numberOfStudents=numberOfStudents;
    }

  }


}

class PrimarySchool extends School{
  constructor(name,numberOfStudents,pickupPolicy)
  {
    super(name,'primary',numberOfStudents)
    this._pickupPolicy=pickupPolicy;
  }
  get pickupPolicy()
  {
    return this._pickupPolicy=pickupPolicy;
  }
}

class HighSchool extends School{
  constructor(name,numberOfStudents,sportsTeams)
  {
    super(name,'high',numberOfStudents);
    this._sportsTeams=sportsTeams;
  }
  get sportsTeams()
  {
    return this._sportsTeams=sportsTeams;
  }
}

const teacher1= new PrimarySchool('Eyal',514,'Students must be picked up by a parent, guardian, or a family member over the age of 13.')

//console.log(teacher1)
teacher1.quickFacts()
const sub = School.pickSubstituteTeacher(['Jamal Crawford', 'Lou Williams', 'J. R. Smith', 'James Harden', 'Jason Terry', 'Manu Ginobli'])
console.log('your substitute teacher is '+sub)

const teacher2=new HighSchool('sabina',415,['Baseball', 'Basketball', 'Volleyball', 'Track and Field']);
//console.log(teacher2)

